// <auto-generated />
using System;
using Bilingue.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bilingue.Infra.Migrations
{
    [DbContext(typeof(BilingueContext))]
    [Migration("20220328142031_Fluent_API")]
    partial class Fluent_API
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bilingue.Domain.DomainClassroom.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("SchoolYear")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("Number");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Bilingue.Domain.DomainRegistraition.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Bilingue.Domain.DomainStudent.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<int>("Age")
                        .HasColumnType("INT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Bilingue.Domain.DomainRegistraition.Registration", b =>
                {
                    b.HasOne("Bilingue.Domain.DomainClassroom.Classroom", "Classroom")
                        .WithMany("Registrations")
                        .HasForeignKey("ClassroomId")
                        .HasConstraintName("FK_ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilingue.Domain.DomainStudent.Student", "Student")
                        .WithMany("Registrations")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Studenid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Bilingue.Domain.DomainClassroom.Classroom", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("Bilingue.Domain.DomainStudent.Student", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
